name: Build and Release Windows MSI Installer

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0
  workflow_dispatch:  # Allows manual triggering

jobs:
  build-windows-msi:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Get version info
        id: version
        shell: pwsh
        run: |
          if ("${{ github.ref }}".StartsWith("refs/tags/")) {
            $version = "${{ github.ref }}".Replace("refs/tags/", "")
            echo "version=$version" >> $env:GITHUB_OUTPUT
            echo "is_release=true" >> $env:GITHUB_OUTPUT
          } else {
            $date = Get-Date -Format "yyyyMMdd"
            $sha = "${{ github.sha }}".Substring(0,7)
            $version = "$date-$sha"
            echo "version=$version" >> $env:GITHUB_OUTPUT
            echo "is_release=false" >> $env:GITHUB_OUTPUT
          }

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cx_Freeze
          if (Test-Path "requirements.txt") {
            pip install -r requirements.txt
          }

      - name: Generate setup.py
        shell: pwsh
        run: |
          echo "import sys" > setup.py
          echo "from cx_Freeze import setup, Executable" >> setup.py
          echo "" >> setup.py
          echo "build_options = {" >> setup.py
          echo "    'packages': []," >> setup.py
          echo "    'excludes': []," >> setup.py
          echo "    'include_files': [" >> setup.py
          echo "        ('alarm', 'alarm')," >> setup.py
          echo "        ('alarm1', 'alarm1')," >> setup.py
          echo "        ('alarm24', 'alarm24')," >> setup.py
          echo "        ('img', 'img')," >> setup.py
          echo "    ]," >> setup.py
          echo "}" >> setup.py
          echo "" >> setup.py
          echo "base = 'Win32GUI' if sys.platform == 'win32' else None" >> setup.py
          echo "" >> setup.py
          echo "executables = [" >> setup.py
          echo "    Executable('reminder.py', base=base, target_name='reminder.exe')" >> setup.py
          echo "]" >> setup.py
          echo "" >> setup.py
          echo "setup(" >> setup.py
          echo "    name='CeLOE Desktop'," >> setup.py
          echo "    version='${{ steps.version.outputs.version }}'," >> setup.py
          echo "    description='CeLOE Desktop Reminder Application'," >> setup.py
          echo "    options={'build_exe': build_options, 'bdist_msi': {}}," >> setup.py
          echo "    executables=executables" >> setup.py
          echo ")" >> setup.py

      - name: Build MSI
        run: |
          python setup.py bdist_msi
          Get-ChildItem -Path "dist" -Recurse

      - name: Find MSI File
        id: msi_info
        shell: pwsh
        run: |
          $msi = Get-ChildItem -Path "dist" -Filter *.msi -Recurse | Select-Object -First 1
          if ($null -eq $msi) {
            Write-Host "❌ No MSI file found!"
            exit 1
          }
          echo "MSI_FILE=$($msi.FullName)" >> $env:GITHUB_ENV
          echo "MSI_NAME=$($msi.Name)" >> $env:GITHUB_ENV
          echo "msi_file=$($msi.FullName)" >> $env:GITHUB_OUTPUT
          echo "msi_name=$($msi.Name)" >> $env:GITHUB_OUTPUT

      - name: Upload MSI Artifact
        uses: actions/upload-artifact@v4
        with:
          name: CeLOE_Desktop-msi-${{ steps.version.outputs.version }}
          path: ${{ steps.msi_info.outputs.msi_file }}
          retention-days: 30

      - name: Create GitHub Release
        if: steps.version.outputs.is_release == 'true'
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.msi_info.outputs.msi_file }}
          tag_name: ${{ steps.version.outputs.version }}
          name: Release ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true
          body: |
            ## Windows MSI Installer - ${{ steps.version.outputs.version }}

            Download and run the MSI file to install the CeLOE Desktop Reminder.

            ### Installation
            1. Download the MSI file: `${{ steps.msi_info.outputs.msi_name }}`
            2. Run the installer
            3. App will be installed and available in the Start Menu

            ### Uninstallation
            Use *Apps & Features* in Windows Settings.

            ### Built from commit:
            `${{ github.sha }}`
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug on failure
        if: failure()
        run: |
          echo "=== DEBUG ==="
          echo "Version: ${{ steps.version.outputs.version }}"
          echo "Is release: ${{ steps.version.outputs.is_release }}"
          echo "MSI File: ${{ steps.msi_info.outputs.msi_file }}"
          echo "Exists: $(Test-Path '${{ steps.msi_info.outputs.msi_file }}')"