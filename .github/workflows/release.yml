name: Build PyInstaller AppImage

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to build'
        required: true
        default: 'v1.0.0'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.tag || github.ref }}

      - name: Checkout for pushes (tags)
        if: ${{ github.event_name == 'push' }}
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Build with PyInstaller
        run: |
          pyinstaller reminder.py \
            --onefile \
            --add-data "alarm:alarm" \
            --add-data "alarm1:alarm1" \
            --add-data "alarm24:alarm24" \
            --add-data "img:img"

      - name: Download and extract linuxdeploy
        run: |
          wget -O linuxdeploy.AppImage https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          chmod +x linuxdeploy.AppImage
          ./linuxdeploy.AppImage --appimage-extract
          mv squashfs-root linuxdeploy-dir

      - name: Build AppImage using extracted linuxdeploy
        run: |
          mkdir -p AppDir/usr/bin
          cp dist/reminder AppDir/usr/bin/reminder
          cp -r alarm alarm1 alarm24 img AppDir/usr/bin/
          chmod +x AppDir/usr/bin/reminder

          echo -e '[Desktop Entry]\nName=Reminder\nExec=reminder\nIcon=alarm\nType=Application\nCategories=Utility;' > AppDir/reminder.desktop
          mkdir -p AppDir/usr/share/icons/hicolor/256x256/apps
          cp img/icon.png AppDir/usr/share/icons/hicolor/256x256/apps/alarm.png || true
          cp img/icon.png AppDir/alarm.png

          ./linuxdeploy-dir/AppRun --appdir AppDir -o appimage
          mv Reminder*.AppImage reminder.AppImage
        
      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: reminder.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: Build and Release Windows Executable

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v2.1.0, etc.
  workflow_dispatch:  # Allows manual triggering

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'  # Adjust version as needed
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        # Install your app dependencies if you have a requirements.txt
        # pip install -r requirements.txt
        
    - name: Build executable with PyInstaller
      run: |
        pyinstaller reminder.py --onefile --add-data "alarm;alarm" --add-data "alarm1;alarm1" --add-data "alarm24;alarm24" --add-data "img;img" --name reminder-windows
        
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: reminder-windows-executable
        path: dist/reminder-windows.exe
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: dist/reminder-windows.exe
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}